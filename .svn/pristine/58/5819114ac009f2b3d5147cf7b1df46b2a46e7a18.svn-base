<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover">
    <meta name="format-detection" content="telephone=no, email=no, date=no, address=no">
    <title>书架</title>
    <link rel="stylesheet" type="text/css" href="../../css/api.css"/>
    <link rel="stylesheet" type="text/css" href="../../../common/fontclass02/iconfont.css"/>
    <script src="../../../common/fontclass02/iconfont.js"></script>
    <script>
        document.documentElement.style.fontSize = document.documentElement.clientWidth / 768 * 10 + 'px';
    </script>
    <link rel="stylesheet" type="text/css" href="../../css/homePageStyle/bookcase.css">
</head>
<body>
  <div id="app" v-cloak>
    <div class="top" id="top">
      <div class="title">
           <h1>书架</h1>
           <div class="topRight">
             <span style="margin-right:1.5rem;" @touchend="edit">{{ editTxt }}</span><span>记录</span>
           </div>
      </div>
      <div class="tab">
        <span style="margin-right:15.6rem;" :class="click" @touchend="isBook">图书</span><span @touchend="isMainTitle" :class="click1">书单</span>
      </div>
    </div>
    <!-- <div class="bookshelf" v-show="bookFlag">
      <div class="lock">
        <span class="time">6天15小时后</span>
        <span class="span01" style="display:none">待领取</span>
        <button>分享免费领</button>
      </div>
      <div class="book" @touchend="goBookInfo(item.bookID,index)" v-for="(item,index) in resData.bookList" ref="item.bookID">
        <div class="bookcover">
          <img :src="item.bookCover" class="bookImg">
          <div class="type">
            <span class="span02">儿童文学</span>
            <svg class="icon robot" aria-hidden="true">
                <use xlink:href="#icon-jiqiren"></use>
            </svg> -->
            <!-- 勾选 -->
            <!-- <div class="check" v-if="editFlag" v-show="!item.isSure">
              <svg class="icon" aria-hidden="true">
                  <use xlink:href="#icon-dg_-copy"></use>
              </svg>
            </div>
            <div class="check sel" v-if="editFlag" @touchend="check" v-show="item.isSure">
              <svg class="icon" aria-hidden="true">
                  <use xlink:href="#icon-dg_-copy"></use>
              </svg>
            </div> -->
            <!-- 已完成 -->
            <!-- <img src="../../../common/image02/complete.png" class="complete" v-if="item.chapterCount==item.completeChapterCount ? true : false">
          </div>
        </div> -->
        <!-- 进度条 -->
        <!-- <div class="progress">
            <div class="plan">
                <div class="bar" ref="bar"></div>
            </div>
            <span>{{ item.completeChapterCount }}/{{ item.chapterCount }}</span>
        </div>
        <h2>{{ item.bookName }}</h2>
      </div>
      <div class="lattice" @touchend="goBookCity">
        <img src="../../../common/image02/mask.png">
      </div>
    </div>
    <div class="special" v-show="!bookFlag">
      <div class="bookList">
        <div class="cover">
          <img src="../../../common/image02/banner.png">
          <span class="bookNumber">6本书</span>
          <span class="number">2300人在读</span>
          <div class="check sel">
            <svg class="icon" aria-hidden="true">
                <use xlink:href="#icon-dg_-copy"></use>
            </svg>
          </div>
        </div>
        <h3>这个寒假定个小目标，一起来看这些书</h3>
        <p>北京实验二小校长咏莉为你选书</p>
      </div>
      <span class="more">没有更多了</span>
    </div> -->
    <!-- 遮罩 -->
    <!-- <div class="move" style="color: #00b596;" v-if="editFlag" v-show="!morenFlag">移出所选（2）</div> -->
  </div>
</body>
<link rel="stylesheet" type="text/css" href="../../css/custom-toast.css">
<script type="text/javascript" src="../../../common/script/custom-toast.js"></script>
<script type="text/javascript" src="../../../common/script/lib-storage.js"></script>
<script type="text/javascript" src="../../../common/script/api.js"></script>
<script type="text/javascript" src="../../../common/script/vue.js"></script>
<script type="text/javascript" src="../../../common/script/lib-common.js"></script>
<script type="text/javascript" src="../../../common/script/services/lib-homePage-service.js"></script>
<script type="text/javascript" src="../../../common/script/services/lib-myCenter_frm-service.js"></script>
<script type="text/javascript" src="../../../common/script/lib-analysis.js"></script>
<!-- <script type="text/javascript" src="../../newbieGuide/bookshelf-guide.js"></script> -->
<script type="text/javascript">
apiready = function (){
  var app = new Vue({
    el:'#app',
    data:{
      // resData:[],
      // isComplete:false,
      bookFlag:true,
      click:'click',
      click1:'',
      chooseFlag:false,
      // morenFlag:false,
      // checkFlag:false,
      editFlag:false,
      editTxt:'编辑'
      // outFlag:false
    },
    mounted(){
      this.openBook();
      this.watcherEdit();
      // this.watchResh()
    },
    methods:{
      //打开图书页面
      openBook(){
        api.closeFrame({
            name: 'bookCase2'
        });
        console.log('editflag'+this.editFlag)
        api.openFrame({
            name: 'bookCase1',
            url: './bookcase1.html',
            rect: {
                x: 0,
                y: $api.byId('top').offsetHeight,
                w: api.winWidth,
                h: api.winHeight-$api.byId('top').offsetHeight-70
            },
            pageParam: {
                // editFlag:this.editFlag
            },
            bounces: true,
            // bgColor: '#fff',
            vScrollBarEnabled: true,
            hScrollBarEnabled: true
        });
      },
      //监听
      watchResh(){
        api.addEventListener({
            name: 'backResh'
        }, function(ret, err){
            if( ret ){
              api.sendEvent({
                  name: 'backResh1'
                  // extra: {
                  //     key1: 'value1',
                  //     key2: 'value2'
                  // }
              });

                //  alert( JSON.stringify( ret ) );
            }else{
                //  alert( JSON.stringify( err ) );
            }
        });

      },

      watcherEdit(){
        var that = this;
        api.addEventListener({
            name: 'editFlag2'
        }, function(ret, err){

            if( ret ){
              that.editFlag = false;
              that.editTxt = '编辑';
              api.sendEvent({
                  name: 'noChoose',
                  // extra: {
                  //     key1: 'value1',
                  //     key2: 'value2'
                  // }
              });

                //  alert( JSON.stringify( ret ) );
            }else{
                 alert( JSON.stringify( err ) );
            }
        });

      },
      goBookCity(){
        api.sendEvent({
            name: 'goBookCity'
        });
      },
      //编辑
      edit(){
        this.editFlag = !this.editFlag;
        api.sendEvent({
            name: 'edit',
            extra: {
                status:this.editFlag
            }
        });

        if(this.editFlag){
          this.editTxt = '取消';
        }else{
          this.editTxt = '编辑'
          api.sendEvent({
              name: 'editFlag1',
          });
        }
      },
      //选中图书
      // check(){
      //   console.log('hahha')
      //   if(this.editFlag){
      //     this.morenFlag = false
      //     console.log(this.morenFlag)
      //   }
      // },
      //点击专题
      isBook(){
        this.editFlag = false;
        this.editTxt = '编辑';
        this.bookFlag = true;
        this.click1 = '';
        this.click = 'click';
        this.openBook();
      },
      isMainTitle(){
        // alert(777)
        return;
        api.closeFrame({
            name: 'bookCase1'
        });
        this.editFlag = false;
        this.editTxt = '编辑';
        this.bookFlag = false;
        this.click = '';
        this.click1 = 'click';
        api.openFrame({
            name: 'bookCase2',
            url: './bookcase2.html',
            rect: {
                x: 0,
                y: $api.byId('top').offsetHeight,
                w: api.winWidth,
                h: api.winHeight-$api.byId('top').offsetHeight-70
            },
            pageParam: {
                // name: 'test'

            },
            bounces: true,
            bgColor: 'rgba(0,0,0,0)',
            vScrollBarEnabled: true,
            hScrollBarEnabled: true
        });
      },
      //JIANTINGSHIJIAN
      // watchRemove(){
      //   var that = this;
      //   api.addEventListener({
      //       name: 'remove'
      //   }, function(ret, err){
      //       if( ret ){
      //           //  alert( JSON.stringify( ret ) );
      //           var chooseArr = [];
      //           that.resData.bookList.map((v,i)=>{
      //             if(v.isSure){
      //               chooseArr.push(v.bookID)
      //             }
      //           });
      //           var data = {
      //             BookIDList : chooseArr
      //           }
      //           $comm.socket(2013,data,res=>{
      //             console.log(res)
      //             if(res){
      //               res = JSON.parse(res);
      //               if(res.error===0){
      //                 that.getBookCaseData(1);
      //               }else{
      //                 api.toast({
      //                     msg: res.errMsg,
      //                     duration: 2000,
      //                     location: 'middle'
      //                 });
      //
      //               }
      //             }
      //           })
      //       }else{
      //           //  alert( JSON.stringify( err ) );
      //           api.toast({
      //               msg: '网络错误',
      //               duration: 2000,
      //               location: 'bottom'
      //           });
      //
      //       }
      //   });
      // },
      //获取书架数据
      // getBookCaseData(page){
      //   console.log('什么')
      //   var data = {
      //     Page:page
      //   }
      //   $comm.socket(2011,data,(res)=>{
      //     console.log(res)
      //     res = JSON.parse(res)
      //     if(res.error==0){
      //       this.resData = JSON.parse(res.datas);
      //       console.log(JSON.stringify(this.resData));
      //       this.$set(this.resData.bookList,'isSure',false);
      //       // console.log(JSON.stringify(this.resData.bookList)+'_____________')
      //       this.resData.bookList.map((v,i)=>{
      //         // console.log(v.bookName)
      //         this.$set(v,'isSure',false)
      //         v.bookCover = $comm.resUri + v.bookCover;
      //         console.log(v.bookCover)
      //       })
      //       // console.log(JSON.stringify(this.resData)+'________>>')
      //     }else{
      //       alert(res.errorMsg)
      //     }
      //   })
      // },
    }
  })
}
// apiready = function () {
//     var app = new Vue({
//         el: '#app',
//         data: {
//             isShowRule: false,
//             name:'',
//             shareInfo: '',
//             audioPath:'',
//             canShare: false,
//             contentUrl:'',
//             popup:false,
//         },
//         created:function(){
//           // this.loadInfo();
//           swiper
//         },
//         mounted: function () {
//             var that = this;
//             that.toast = new customToast();
//         },
//         methods: {
//             // 下拉刷新
//             pullDownFresh:function(){
//               var that = this;
//               api.setRefreshHeaderInfo({
//                     visible: true,
//                     // loadingImg: '../image/timg.gif',
//                     bgColor: '#fff',
//                     textColor: '#ccc',
//                     textDown: '下拉刷新...',
//                     textUp: '松开刷新...',
//                     showTime: true
//                 }, function(ret, err) {
//                     // _this.taskListWait();
//                     console.log('下拉刷新')
//                     setTimeout('api.refreshHeaderLoadDone()', '500');
//                 });
//                 setInterval(function(){
//
//                 },1000)
//             },
//
//             initSwiper: function(initialSlide, length) {
//               mySwiper = new Swiper('.swiper-container', {
//                   initialSlide: initialSlide, //初始化页面索引
//                   speed: 1000,
//                   loop: true,
//                   centeredSlides: true,
//                   slidesPerView: 3,
//                   loopedSlides: length,
//                   pagination: '.swiper-pagination',
//                   paginationClickable: true,
//                   paginationType: 'fraction'
//               });
//             },
//             goReadresults: function () {
//                 api.openFrame({
//                     name: 'Readresults_detailShare',
//                     url: 'Readresults_detailShare.html',
//                     bounces: false,
//                     bgColor:'#fff',
//                     slidBackEnabled: false,
//                     animation: {
//                         type: "fade", //动画类型（详见动画类型常量）
//                         subType: "from_right", //动画子类型（详见动画子类型常量）
//                         duration: 600 //动画过渡时间，默认300毫秒
//                     }
//                 });
//             },
//             funErr: function () {
//                 this.toast.fail({
//                     title: '网络异常，请检查网络链接'
//                 })
//             },
//             swiper:function () {
//               var swiper = new Swiper('.swiper-container', {
//                   pagination: '.swiper-pagination',
//                   paginationClickable: true
//               })
//             }
//         },
//     });
// };

</script>

</html>
