<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, viewport-fit=cover">
    <meta name="format-detection" content="telephone=no, email=no, date=no, address=no">
    <title>兴趣选书</title>
    <link rel="stylesheet" type="text/css" href="../../css/api.css" />
    <link rel="stylesheet" type="text/css" href="../../../common/fontclass02/iconfont.css" />
    <script src="../../../common/fontclass02/iconfont.js"></script>
    <script>
        document.documentElement.style.fontSize = document.documentElement.clientWidth / 768 * 10 + 'px';
    </script>
    <link rel="stylesheet" type="text/css" href="../../css/myBookshelfStyle/bookLevel.css">
</head>

<body>
    <div id="app">
        <div class="top">
            <div class="return" @touchend="exit">
                <svg class="icon" aria-hidden="true">
             <use xlink:href="#icon-fh_"></use>
         </svg>
            </div>
            <h1>兴趣选书</h1>
            <div class="return">
                <svg class="icon" aria-hidden="true">
             <use xlink:href="#icon"></use>
         </svg>
            </div>
        </div>
        <div class="content">
            <ul class="list">
                <!-- @click="selectedLabel(item.dimensionName)" -->
                <li @touchstart="start($event)" @touchend="chooseBookByType($event,'','','all')" :class="[dimension === 'all' ? 'bg' : '']"><span>全部</span></li>
                <li :class="[dimension === item.dimensionName ? 'bg' : '']" v-for="(item,index) in resData.dimensionList" @touchstart="start($event)" @touchend="chooseBookByType($event,item.dimensionID,item.dtid,item.dimensionName)"><span>{{ item.dimensionName }}</span></li>
            </ul>
            <!-- <div class="book">
        <div class="box" v-for="(item,index) in bookData.bookList">
           <img :src="resUri+item.bookCover">
           <div>
             <h2>{{ item.bookName }}</h2>
             <span>{{ item.publisher }}</span>
             <p>作品简介是作品简介是长袜子皮皮的作品简介的作品简介是作品简介是长袜子皮皮的作品简介的作品简介是作品简介是长袜子皮皮的作品简介的作品简介是</p>
           </div>
        </div>
      </div> -->
        </div>
    </div>
</body>
<link rel="stylesheet" type="text/css" href="../../css/custom-toast.css">
<script type="text/javascript" src="../../../common/script/custom-toast.js"></script>
<script type="text/javascript" src="../../../common/script/lib-storage.js"></script>
<script type="text/javascript" src="../../../common/script/api.js"></script>
<script type="text/javascript" src="../../../common/script/vue.js"></script>
<script type="text/javascript" src="../../../common/script/lib-common.js"></script>
<script type="text/javascript" src="../../../common/script/services/lib-homePage-service.js"></script>
<script type="text/javascript" src="../../../common/script/services/lib-myCenter_frm-service.js"></script>
<script type="text/javascript" src="../../../common/script/lib-analysis.js"></script>
<!-- <script type="text/javascript" src="../../newbieGuide/bookshelf-guide.js"></script> -->
<script type="text/javascript">
    apiready = function() {
        var app = new Vue({
            el: '#app',
            data: {
                resData: {},
                resUri: '',
                levelData: {},
                labelBooks: [],
                dimension: 'all'
            },
            mounted() {
                this.resUri = $comm.resUri;
                this.getBookType();
                this.openCon()
            },
            methods: {
                exit() {
                    api.closeWin({});
                },
                start(event){
                  this.x1 = event.touches[0].pageX
                  this.y1 = event.touches[0].pageY
                },
                getBookType() {
                    var data = {}
                    $comm.socket(2007, {}, res => {
                        res = JSON.parse(res);
                        if (res.error == 0) {
                            this.resData = JSON.parse(res.datas);
                        }
                    })
                },
                openCon(Tid, Dtid) {
                    api.openFrame({
                        name: 'bookCategoryCon',
                        url: './bookCategoryCon.html',
                        bounces: true,
                        reload:true,
                        rect: {
                            x: 103,
                            y: 65,
                            w: 'auto',
                            h: 'auto'
                        },
                        pageParam: {
                            tId: Tid,
                            dtid: Dtid,
                            type: 0
                        }
                    });
                },
                //从分类列表选书
                chooseBookByType(event,tId, dtid, dimension) {

                  var calX = event.changedTouches[0].pageX - this.x1||0
                  var calY = event.changedTouches[0].pageY - this.y1||0
                  if(Math.sqrt(Math.pow(calX, 2) + Math.pow(calY, 2))==0){
                    console.log("00000000000000")
                    this.dimension = dimension
                    var data = {
                        DTID: dtid,
                        DID: tId,
                        Page: 1
                    }
                    this.openCon(tId, dtid)
                  }
                },
                selectedLabel: function(id) {
                    this.labelBooks = resData.dimensionList
                    this.dimension = !this.dimension;
                    if (id === 'all') {
                        this.labelBooks = this.all;
                        this.dimension = id;
                        return
                    }
                    this.dimension = id;
                    var needShowBooks = [];
                    this.allBooks.forEach(function(item) {
                        if (item.dimensionList.includes(id)) {
                            needShowBooks.push(item);
                        }
                    });
                    this.labelBooks = needShowBooks;
                },
            }
        })
    }
</script>

</html>
